{"version":3,"sources":["BooksAPI.js","components/home/book-shelf/book-card/book-rating/BookRating.js","components/home/book-shelf/book-card/BookCard.js","components/search/SearchBooks.js","components/home/book-shelf/BookShelf.js","components/home/header-nav/Header.js","components/home/Home.js","components/bucket/BucketComponent.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","getAll","fetch","concat","then","res","json","data","books","update","book","shelf","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","updateById","search","query","BookRating","props","rate","_React$useState","React","useState","_React$useState2","slicedToArray","rating","setRating","react_default","a","createElement","className","toConsumableArray","Array","map","star","index","type","key","onClick","ratingRecord","bookId","getItem","currentRating","parse","currentBook","find","setItem","bookRateIndex","indexOf","splice","length","removeItem","push","BookCard","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","showMenu","selected","name","showCheckBox","bookSelected","toggleShowMenu","setState","current","selectShelf","BooksApi","onBookHover","onBookHoverLeave","ref","createRef","event","contains","target","onClickOutside","document","addEventListener","handleClickOutside","bind","removeEventListener","e","checked","selectBook","currentStorage","arr","currentBookIndex","_this2","onMouseEnter","onMouseLeave","style","width","height","backgroundImage","imageLinks","thumbnail","title","authors","author","undefined","book_rating_BookRating","display","onChange","defaultChecked","Component","SearchBooks","spinner","timeout","handleShelfChange","BooksApI","handleSelectBook","allBooks","searchQuery","value","trim","clearTimeout","setTimeout","cleanBooks","isArray","filter","storageBook","_this3","react_router_dom","to","placeholder","onSearch","LoadingOverlay_default","active","text","book_shelf_book_card_BookCard","BookShelf","refresh","replace","Header","modules","activeClass","spy","smooth","offset","duration","Home","bookShelves","getAllBooks","BooksAPI","prevState","componentDidMount","handleRefresh","selectBookEvent","header_nav_Header","home_book_shelf_BookShelf","BucketComponent","moveAll","_callee","currentSelectedBooks","requests","regenerator_default","wrap","_context","prev","next","BookId","Promise","resolve","reject","BookAPI","all","finally","afterMove","stop","unselectAll","select","BooksApp","location","window","pathname","myRef","react_router","exact","path","element","components_home_Home","components_search_SearchBooks","components_bucket_BucketComponent","ReactDOM","createRoot","getElementById","render","basename","process","src_App"],"mappings":"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","file":"static/js/main.15b6aac5.chunk.js","sourcesContent":["\r\nconst api = \"https://reactnd-books-api.udacity.com\"\r\n\r\n\r\n// Generate a unique token for storing your bookshelf data on the backend server.\r\nlet token = localStorage.token\r\nif (!token)\r\n  token = localStorage.token = Math.random().toString(36).substr(-8)\r\n\r\nconst headers = {\r\n  'Accept': 'application/json',\r\n  'Authorization': token\r\n}\r\n\r\nexport const get = (bookId) =>\r\n  fetch(`${api}/books/${bookId}`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.book)\r\n\r\nexport const getAll = () =>\r\n  fetch(`${api}/books`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.books)\r\n\r\nexport const update = (book, shelf) =>\r\n  fetch(`${api}/books/${book.id}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ shelf })\r\n  }).then(res => res.json())\r\n\r\nexport const updateById = (id, shelf) =>\r\n  fetch(`${api}/books/${id}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ shelf })\r\n  }).then(res => res.json())\r\n\r\nexport const search = (query) =>\r\n  fetch(`${api}/search`, {\r\n    method: 'POST',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ query })\r\n  }).then(res => res.json())\r\n    .then(data => data.books)\r\n","import React from \"react\";\r\nimport './BookRating.css';\r\nfunction BookRating(props) {\r\n    const rate = props.rate;\r\n    const [rating, setRating] = React.useState(rate);\r\n\r\n    return (\r\n        <div className=\"star-rating\">\r\n            {[...Array(5)].map((star, index) => {\r\n                index += 1;\r\n                return (\r\n                    <button\r\n                        type=\"button\"\r\n                        key={index}\r\n                        className={index <= rating ? \"on\" : \"off\"}\r\n                        onClick={() => {\r\n                            setRating(index);\r\n                            let ratingRecord = { id: props.bookId, rate: index };\r\n                            if (!localStorage.getItem('rating')) {\r\n                                let rating = [];\r\n                                rating.push(ratingRecord);\r\n                                localStorage.setItem('rating', JSON.stringify(rating));\r\n                            } else {\r\n                                let currentRating = JSON.parse(localStorage.getItem('rating'));\r\n                                let currentBook = currentRating.find(book => book.id === props.bookId)\r\n                                if (!currentBook) {\r\n                                    currentRating.push(ratingRecord);\r\n                                    localStorage.setItem('rating', JSON.stringify(currentRating));\r\n                                } else {\r\n                                    if (currentBook.rate !== ratingRecord.rate) {\r\n                                        currentBook.rate = ratingRecord.rate;\r\n                                        localStorage.setItem('rating', JSON.stringify(currentRating));\r\n                                    } else {\r\n                                        let bookRateIndex = currentRating.indexOf(currentBook);\r\n                                        currentRating.splice(bookRateIndex, 1);\r\n                                        currentRating.length > 0 ?\r\n                                        localStorage.setItem('rating', JSON.stringify(currentRating)):\r\n                                        localStorage.removeItem('rating');\r\n                                        setRating(0);\r\n                                    }\r\n                                }\r\n                            }\r\n                        }}\r\n                    >\r\n                        <span className=\"star\">&#9733;</span>\r\n                    </button>\r\n                );\r\n            })}\r\n        </div>\r\n    )\r\n}\r\nexport default BookRating;","import './BookCard.css';\r\nimport React, { Component } from 'react';\r\nimport * as BooksApi from '../../../../BooksAPI';\r\nimport BookRating from './book-rating/BookRating';\r\n\r\n\r\nclass BookCard extends Component {\r\n    state = {\r\n        showMenu: false,\r\n        selected: this.props.book.shelf,\r\n        name: this.props.book.id,\r\n        showCheckBox: false,\r\n        bookSelected: false\r\n    }\r\n    constructor(props) {\r\n        super(props);\r\n        this.ref = React.createRef();\r\n\r\n    }\r\n    toggleShowMenu = () => {\r\n        this.setState((current) => ({\r\n            showMenu: !current.showMenu\r\n        }))\r\n    }\r\n    selectShelf = (shelf, book) => {\r\n        BooksApi.update(book, shelf).then(data => {\r\n            this.setState({ selected: shelf });\r\n            this.props.shelf();\r\n        });\r\n    }\r\n    onClickOutside() {\r\n        this.setState({ showMenu: false });\r\n    }\r\n    handleClickOutside(event) {\r\n        if (this.ref.current && !this.ref.current.contains(event.target)) {\r\n            this.onClickOutside();\r\n        }\r\n    };\r\n    componentDidMount() {\r\n        document.addEventListener('click', this.handleClickOutside.bind(this), true);\r\n    }\r\n    componentWillUnmount() {\r\n        document.removeEventListener('click', this.handleClickOutside.bind(this), true);\r\n    };\r\n    onBookHover = () => {\r\n        this.setState({ showCheckBox: true });\r\n    }\r\n    onBookHoverLeave = () => {\r\n        this.setState({ showCheckBox: false });\r\n    }\r\n    selectBook(e) {\r\n        this.setState({ bookSelected: e.target.checked });\r\n        this.props.selectBook(e.target.checked);\r\n        let currentStorage = JSON.parse(localStorage.getItem('selectedBooks'));\r\n        if (e.target.checked && !currentStorage) {\r\n            let arr = [this.props.book.id];\r\n            localStorage.setItem('selectedBooks', JSON.stringify(arr));\r\n        } else if (e.target.checked && currentStorage) {\r\n            currentStorage.push(this.props.book.id);\r\n            localStorage.setItem('selectedBooks', JSON.stringify(currentStorage));\r\n        } else {\r\n            if (currentStorage) {\r\n                const currentBookIndex = currentStorage.indexOf(this.props.book.id)\r\n                currentStorage.splice(currentBookIndex, 1);\r\n                currentStorage.length > 0 ?\r\n                    localStorage.setItem('selectedBooks', JSON.stringify(currentStorage)) :\r\n                    localStorage.removeItem('selectedBooks')\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div onMouseEnter={this.onBookHover} onMouseLeave={this.onBookHoverLeave} className={`book ${this.state.bookSelected ? 'selected-book' : ''}`}>\r\n                    <div className=\"book-right\">\r\n                        <div className=\"book-cover\" style={{ width: 128, height: 193, backgroundImage: `url(${this.props.book.imageLinks ? this.props.book.imageLinks.thumbnail : ''} )` }}></div>\r\n                    </div>\r\n                    <div className='book-left'>\r\n                        <div className=\"book-title\">{this.props.book.title} </div>\r\n                        <div className=\"book-authors\">By: {this.props.book.authors ? this.props.book.authors.map(author => (<span key={author}>{author + ', '}</span>)) : ''}</div>\r\n                        <div ref={this.ref} className=\"book-shelf-changer\" onClick={this.toggleShowMenu}>\r\n                            {\r\n                                this.state.showMenu ? (\r\n                                    <div className='book-menu'>\r\n                                        <p className='move-to-text'>Move to...</p>\r\n                                        <div className={`book-menu-item ${this.state.selected === 'currentlyReading' ? 'selected' : ''}`} onClick={(shelf, book) => this.selectShelf('currentlyReading', this.props.book)}>Currently Reading</div>\r\n                                        <div className={`book-menu-item ${this.state.selected === 'wantToRead' ? 'selected' : ''}`} onClick={(shelf, book) => this.selectShelf('wantToRead', this.props.book)}>Want to Read</div>\r\n                                        <div className={`book-menu-item ${this.state.selected === 'read' ? 'selected' : ''}`} onClick={(shelf, book) => this.selectShelf('read', this.props.book)}>Read</div>\r\n                                        <div className={`book-menu-item ${(this.state.selected === 'None' || this.state.selected === undefined) ? 'selected' : ''}`} onClick={(shelf, book) => this.selectShelf('None', this.props.book)}>None</div>\r\n                                    </div>\r\n                                ) : ''\r\n                            }\r\n                        </div>\r\n                        <BookRating bookId={this.props.book.id} rate={\r\n                            localStorage.getItem('rating') && JSON.parse(localStorage.getItem('rating')).find(book => book.id === this.props.book.id) ?\r\n                                JSON.parse(localStorage.getItem('rating')).find(book => book.id === this.props.book.id).rate : 0\r\n                        } />\r\n                        <label style={{ 'display': this.state.showCheckBox || this.state.bookSelected ? 'inline-block' : 'none' }} className=\"pure-material-checkbox\">\r\n                            <input onChange={(e) => { this.selectBook(e) }} type=\"checkbox\" defaultChecked={\r\n                                (localStorage.getItem('selectedBooks') && JSON.parse(localStorage.getItem('selectedBooks')).find(book => book === this.props.book.id)) ?\r\n                                    true : false\r\n                            } />\r\n                            <span></span>\r\n                        </label>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default BookCard;","import './SearchBooks.css';\r\nimport LoadingOverlay from 'react-loading-overlay';\r\nimport React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport BookCard from '../home/book-shelf/book-card/BookCard';\r\nimport * as BooksApI from '../../BooksAPI';\r\n\r\nclass SearchBooks extends Component {\r\n  state = {\r\n    books: [],\r\n    query: '',\r\n    spinner: false\r\n  }\r\n  timeout = null;\r\n  onSearch(e) {\r\n    let allBooks = JSON.parse(localStorage.getItem('books'));\r\n    let searchQuery = e.target.value.trim();\r\n\r\n    clearTimeout(this.timeout);\r\n    this.timeout = setTimeout(() => {\r\n      this.setState({ spinner: true })\r\n      if (e.target.value.trim() !== '') {\r\n        BooksApI.search(searchQuery).then(books => {\r\n          let cleanBooks = Array.isArray(books) &&\r\n            books.filter(book => (book.imageLinks && book.imageLinks.thumbnail !== undefined) ? book : '');\r\n          if (cleanBooks) {\r\n            cleanBooks.map(book => {\r\n              let storageBook = allBooks.find(storageBook => storageBook.id === book.id)\r\n              if (storageBook) {\r\n                return book.shelf = storageBook.shelf;\r\n              } else {\r\n                return book;\r\n              }\r\n            })\r\n          }\r\n          this.setState({ books: cleanBooks, query: searchQuery });\r\n          this.setState({ spinner: false });\r\n        });\r\n      } else {\r\n        this.setState({ books: [], query: '' });\r\n        this.setState({ spinner: false });\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  handleShelfChange = () => {\r\n    BooksApI.search(this.state.query).then(books => {\r\n      this.setState({ books });\r\n    });\r\n\r\n  }\r\n  handleSelectBook = (e) => {\r\n    this.props.selectBook(e);\r\n}\r\n  render() {\r\n    return (\r\n      <div className=\"search-books\">\r\n        <div className=\"search-books-bar\">\r\n          <Link to=\"/\">\r\n            <button className=\"close-search\">Close</button>\r\n          </Link>\r\n\r\n          <div className=\"search-books-input-wrapper\">\r\n            <input type=\"text\" placeholder=\"Search by title or author\" onChange={(e) => { this.onSearch(e) }} />\r\n\r\n          </div>\r\n        </div>\r\n        <LoadingOverlay\r\n          active={this.state.spinner}\r\n          spinner\r\n          text='Loading your content...'>\r\n          <div className=\"search-books-results\">\r\n            <ol className={`books-grid ${this.state.query === '' ? 'display-none' : ''}`} >\r\n              {\r\n                (this.state.books && this.state.books.length > 0) ?\r\n                  this.state.books.map(book => <li key={book.id}><BookCard book={book} shelf={this.handleShelfChange} selectBook={(e) =>this.handleSelectBook(e)} /></li>) :\r\n                  <p >No results found. Please refine your search</p>\r\n              }\r\n            </ol>\r\n          </div>\r\n        </LoadingOverlay>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SearchBooks;","import React, { Component } from 'react';\r\nimport BookCard from './book-card/BookCard';\r\nimport './BookShelf.css';\r\nclass BookShelf extends Component {\r\n\r\n    handleShelfChange = () => {\r\n        this.props.refresh();\r\n    }\r\n    handleSelectBook = (e) => {\r\n        this.props.selectBook(e);\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"bookshelf\" id={(this.props.title).replace(/\\s+/g, '')}>\r\n                <h2 className=\"bookshelf-title\">{this.props.title}</h2>\r\n                <div className=\"bookshelf-books\">\r\n                    <ol className=\"books-grid\">\r\n                        {\r\n                            this.props.books.map(book => {\r\n                                return (\r\n                                    <li key={book.id}>\r\n                                        <BookCard book={book} shelf={this.handleShelfChange} selectBook={(e) =>this.handleSelectBook(e)} />\r\n                                    </li>\r\n                                )\r\n                            })\r\n                        }\r\n                    </ol>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BookShelf;","import React from \"react\";\r\nimport './Header.css';\r\nimport { Link } from \"react-scroll\";\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className=\"list-books-title\">\r\n            <div className=\"left-side\">\r\n                <h1>MyReads</h1>\r\n            </div>\r\n\r\n            <div className=\"right-side\">\r\n                <Link\r\n                    activeClass=\"active\"\r\n                    to=\"CurrentlyReading\"\r\n                    spy={true}\r\n                    smooth={true}\r\n                    offset={-70}\r\n                    duration={500}\r\n                    className=\"smooth-link\"\r\n                >Currently Reading</Link>\r\n\r\n                <Link\r\n                    activeClass=\"active\"\r\n                    to=\"WanttoRead\"\r\n                    spy={true}\r\n                    smooth={true}\r\n                    offset={-70}\r\n                    duration={500}\r\n                    className=\"smooth-link\"\r\n                >Want to Read</Link>\r\n\r\n                <Link\r\n                    activeClass=\"active\"\r\n                    to=\"Read\"\r\n                    spy={true}\r\n                    smooth={true}\r\n                    offset={-70}\r\n                    duration={500}\r\n                    className=\"smooth-link\"\r\n                >Read</Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react';\r\nimport LoadingOverlay from 'react-loading-overlay';\r\nimport { Link } from 'react-router-dom';\r\nimport BookShelf from './book-shelf/BookShelf';\r\nimport Header from './header-nav/Header';\r\nimport * as BooksAPI from '../../BooksAPI';\r\nimport './Home.css';\r\nclass Home extends Component {\r\n    bookShelves = [\r\n        { id: 'currentlyReading', title: 'Currently Reading' },\r\n        { id: 'wantToRead', title: 'Want to Read' },\r\n        { id: 'read', title: 'Read' }\r\n    ]\r\n    state = {\r\n        books: []\r\n    }\r\n    getAllBooks = () => {\r\n        BooksAPI.getAll().then((books) => {\r\n            this.setState((prevState) => {\r\n                if (JSON.stringify(prevState.books) === JSON.stringify(books)) {\r\n                    return {books: []}\r\n                }\r\n            })\r\n            // this.setState({books: []})\r\n            setTimeout(() => {\r\n                this.setState(() => {\r\n                    return (\r\n                        { books: books })\r\n                })\r\n                localStorage.setItem('books', JSON.stringify(books));\r\n            }, 0)\r\n        })\r\n    }\r\n    componentDidMount = () => {\r\n        this.getAllBooks();\r\n    }\r\n    handleRefresh = () => {\r\n        this.getAllBooks()\r\n    }\r\n    handleSelectBook = (e) => {\r\n        this.props.selectBookEvent(e)\r\n    }\r\n    render() {\r\n        return (\r\n            (\r\n                <LoadingOverlay\r\n                    active={this.state.books.length === 0}\r\n                    spinner\r\n                    text='Loading your content...'\r\n                >\r\n                    <div className=\"list-books\">\r\n                        <Header />\r\n                        <div className=\"list-books-content\">\r\n                            <div>\r\n                                {this.bookShelves.map(shelf => {\r\n                                    return (\r\n                                        this.state.books.length > 0 ?\r\n                                            <BookShelf key={shelf.id} title={shelf.title} books={this.state.books.filter(book => {\r\n                                                return book.shelf === shelf.id\r\n                                            })} refresh={this.handleRefresh} selectBook={this.handleSelectBook} /> : ''\r\n                                    )\r\n                                })}\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"open-search\" title=\"koko\">\r\n                            <Link to=\"/search\">\r\n                                <button>Search a book</button>\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n\r\n                </LoadingOverlay>\r\n            )\r\n        )\r\n    }\r\n}\r\nexport default Home","import React, { Component } from 'react';\r\nimport * as BookAPI from '../../BooksAPI';\r\nimport './BucketComponent.css';\r\nclass BucketComponent extends Component {\r\n\r\n    moveAll = async (shelf) => {\r\n        let currentSelectedBooks = JSON.parse(localStorage.getItem('selectedBooks'));\r\n        let requests = currentSelectedBooks.map(BookId => {\r\n            return new Promise((resolve, reject) => {\r\n                BookAPI.updateById(BookId, shelf).then(data => resolve(data));\r\n            })\r\n        })\r\n        Promise.all(requests).finally(() => {\r\n            localStorage.removeItem('selectedBooks');\r\n            this.props.afterMove();\r\n        });\r\n\r\n    }\r\n    unselectAll = () => {\r\n        localStorage.removeItem('selectedBooks');\r\n        this.props.afterMove();\r\n    }\r\n    render() {\r\n        return (\r\n            <div style={{ 'display': this.props.select || (localStorage.getItem('selectedBooks') && JSON.parse(localStorage.getItem('selectedBooks')).length > 0) ? 'block' : 'none' }} className='bucket-container'>\r\n                <p className='move-all'>\r\n                    Move all to:\r\n                </p>\r\n                <div className='btns-container'>\r\n                    <span className='cat-name-button' onClick={() => this.moveAll('currentlyReading')}>Currently Reading</span>\r\n                    <span className='cat-name-button' onClick={() => this.moveAll('wantToRead')}>Want To Read</span>\r\n                    <span className='cat-name-button' onClick={() => this.moveAll('read')}>Read</span>\r\n                </div>\r\n                <span className='remove-all' title=\"Unselect All\" onClick={this.unselectAll}></span>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BucketComponent","import React from 'react';\r\nimport SearchBooks from './components/search/SearchBooks';\r\nimport Home from './components/home/Home';\r\nimport { Routes, Route } from 'react-router-dom';\r\nimport BucketComponent from './components/bucket/BucketComponent';\r\nimport './App.css';\r\n\r\n\r\n\r\nclass BooksApp extends React.Component {\r\n  state = {\r\n    selectBook: false\r\n  }\r\n  constructor(props) {\r\n    super(props);\r\n    this.myRef = React.createRef();\r\n  }\r\n  selectBookEvent = (e, afterMove) => {\r\n    this.setState({ selectBook: e });\r\n    const location = window.location;\r\n    if(afterMove === 'afterMove' && location.pathname !== \"/search\") this.myRef.current.getAllBooks()\r\n    if(afterMove === 'afterMove' && location.pathname === \"/search\") window.location.pathname=\"/\" \r\n  }\r\n  render() {\r\n    return (\r\n      <div  className=\"app\"  >\r\n        <span className='test' ></span>\r\n        <Routes>\r\n          <Route exact path=\"/\" element={<Home selectBookEvent={(e) => this.selectBookEvent(e)} ref={this.myRef} />} />\r\n          <Route path=\"/search\" element={<SearchBooks selectBook={(e) => this.selectBookEvent(e)} />} />\r\n        </Routes>\r\n        <BucketComponent select={this.state.selectBook} afterMove={(e) => this.selectBookEvent(false, 'afterMove')} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default BooksApp\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport App from './App'\r\nimport './index.css'\r\n\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n<BrowserRouter basename={process.env.PUBLIC_URL}>\r\n    <App /> \r\n</BrowserRouter>\r\n)\r\n\r\n"],"sourceRoot":""}